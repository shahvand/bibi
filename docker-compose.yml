
services:
  web:
    build: .
    command: >
      bash -c "
        echo 'Waiting for database...' &&
        sleep 10 &&
        echo 'Applying database migrations...' &&
        python manage.py migrate &&
        echo 'Creating superuser if needed...' &&
        python manage.py shell -c \"
          from django.contrib.auth import get_user_model;
          User = get_user_model();
          if not User.objects.filter(username='admin').exists():
              User.objects.create_superuser('admin', 'admin@example.com', 'Admin_Secure_Pass_2024', 
                                           first_name='مدیر', last_name='سیستم', role='WAREHOUSE_MANAGER');
              print('Superuser created successfully');
          else:
              print('Superuser already exists');
        \" &&
        echo 'Collecting static files...' &&
        python manage.py collectstatic --noinput &&
        echo 'Starting server...' &&
        gunicorn bibi.wsgi:application --bind 0.0.0.0:8000 --workers 3
      "
    volumes:
      - .:/home/app
      - static_volume:/home/app/static
      - media_volume:/home/app/media
    env_file:
      - ./.env
    environment:
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    depends_on:
      - db
    restart: always

  db:
    image: mysql:8.0
    volumes:
      - mysql_data:/var/lib/mysql
    env_file:
      - ./.env
    environment:
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
    restart: always
    ports:
      - "3306:3306"

  nginx:
    image: nginx:1.21
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/home/app/static
      - media_volume:/home/app/media
    depends_on:
      - web
    restart: always

volumes:
  mysql_data:
  static_volume:
  media_volume: 